<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>LinkedIn JavaScript API Sample Application</title>
<!-- Load in the JavaScript framework and register a callback function when it's loaded -->
<script type="text/javascript" src="http://platform.linkedin.com/in.js">
api_key: w8ygfeocjd7u
onLoad: onLinkedInLoad
authorize: true
</script>
 
<script src="./js/chart.js"></script>
<canvas id="myChart" width="250" height="250"></canvas>
<div id="myIndustry"></div>
<input type="submit" onclick="loadResults1()" id="moreResult" hidden=true value="Load More!" />
<div id="profiles"></div>
<script type="text/javascript">

function onLinkedInLoad() {
     // Listen for an auth event to occur
     IN.Event.on(IN, "auth", onLinkedInAuth2);
}
 
function onLinkedInAuth2() {
     // After they've signed-in, print a form to enable keyword searching
     IN.API.Profile("me")
	     .fields("location", "firstName", "lastName", "pictureUrl", "industry")
	     .result(displayProfiles);
     var div = document.getElementById("peopleSearchForm");
 
     div.innerHTML = '<h2>Find People on LinkedIn</h2>';
     div.innerHTML += '<form action="javascript:glob.bucketMiles=1000;PeopleSearch();">' +
                      '<input id="keywords" size="30" value="developer" type="text">' +
                      '<input type="submit" value="Search!" /></form>';
}
 
function displayProfiles(profiles) {
     member = profiles.values[0];
     window.glob = {}
     window.glob.location = member.location;
     window.glob.industry = member.industry;
     document.getElementById("myIndustry").innerHTML = "Your Industry is: "+member.industry
}
function EncodeQueryData(data)
{
	   var ret = [];
	      for (var d in data)
		            ret.push(encodeURIComponent(d) + "=" + encodeURIComponent(data[d]));
	         return ret.join("&");
}
function PeopleSearch() {
     // Call the PeopleSearch API with the viewer's keywords
     // Ask for 4 fields to be returned: first name, last name, distance, and Profile URL
     // Limit results to 10 and sort by distance
     // On success, call displayPeopleSearch(); On failure, do nothing.
     var keywords = document.getElementById('keywords').value; 
     IN.API.Raw().url("/people-search:(facets:(code,buckets:(code,name,count)))?facets=industry&"+EncodeQueryData({"title": keywords, "postal-code": encodeURIComponent(glob.location.name), "distance": glob.bucketMiles, "count": 10, "sort": "distance"}))
         .result(displayPeopleBuckets)
         .error(function error(e) { /* do nothing */ }
     );
}
 
function displayPeopleBuckets(peopleSearch) {
	console.log(peopleSearch);
	var colors = ['#FACC00', '#FB9900', '#FB6600', '#FB4800', '#CB0A0A', '#F8F933'];
	var sorted = []
	var list = peopleSearch.facets.values[0].buckets.values
	if (list == undefined) {
		glob.bucketMiles *= 10;
		if(glob.bucketMiles > 10000) {
			alert("I couldnt find someone nearby :(");
			return;
		}
		return PeopleSearch();
	}
	list.sort(function(a,b) {
			a = a.count;
			b = b.count;
		return a > b;
		});
	var data = [];
	minLength = (5 < list.length) ? 5 : list.length;
	for (i = 0; i < minLength; i++) {
		data[data.length] = {value: list[i].count, color: colors[i], label: list[i].name + "," + list[i].code}
	}
// Get the context of the canvas element we want to select
var ctx = document.getElementById("myChart").getContext("2d");

	var myPieChart = new Chart(ctx).Pie(data);

	document.getElementById("myChart").onclick = function(evt) {
		glob.distanceMiles = 1000;
		var activePoints = myPieChart.getSegmentsAtEvent(evt);
		glob.selectedIndustry = activePoints[0].label.split(',')[1];
		loadResults();
	}
}

function loadResults1() {
	glob.distanceMiles *= 5;
	loadResults();
}

function loadResults() {

		var keywords = document.getElementById('keywords').value; 
		     IN.API.PeopleSearch()
			 .fields("firstName", "lastName", "distance", "siteStandardProfileRequest", "industry", "location", "id", "positions", "specialties", "public-profile-url")
			 .params({"title": keywords, "postal-code": encodeURIComponent(glob.location.name), "distance": glob.distanceMiles, "count": 10, 
					 "sort": "distance", "facet": "industry,"+glob.selectedIndustry})
			 .result(displayPeopleSearch)
			 .error(function error(e) { /* do nothing */ }
		     );

}

function displayPeopleSearch(peopleSearch) {
     var div = document.getElementById("peopleSearchResults");
 
     div.innerHTML = "<ul>";
 
     // Loop through the people returned
     var members = peopleSearch.people.values;
     for (var member in members) {
	    xmlHttp = new XMLHttpRequest();
	    xmlHttp.open( "GET", '/profile?url='+members[member].publicProfileUrl, false );
	    xmlHttp.send( null );
	    console.log(xmlHttp.responseText); 
         // Look through result to make name and url.
         var nameText = members[member].firstName + " " + members[member].lastName;
	 console.log(members[member].siteStandardProfileRequest);
         var url = members[member].publicProfileUrl;
	 var distanceText = members[member].distance
         div.innerHTML += "<li><a href=\"" + url + "\">" + nameText + 
         "</a> is " + distanceText + "</li>"
     }
     if (members.length < 10) {
	     document.getElementById('moreResult').hidden = false;
     }
 
     div.innerHTML += "</ul>";
}
</script>
</head>
<body>
<script type="IN/Login"></script>
<div id="peopleSearchForm"></div>
<div id="peopleSearchResults"></div>
</body>
</html>
